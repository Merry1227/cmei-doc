# The Base Application Configuration File

# Profile Configuration
#  available profiles: batch
spring.profiles.active=test

spring.output.ansi.enabled=ALWAYS

#pool
server.tomcat.accept-count=200
#最大连接数，大于最大线程（在NIO模式下）
server.tomcat.max-connections=10000
server.tomcat.max-threads=2000
server.tomcat.min-spare-threads=20


#use jdbc connection pool
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.test-on-borrow = true
spring.datasource.test-on-return = true
spring.datasource.validationQuery = select 1
spring.datasource.maxWait=60000

mybatis.mapper-locations=classpath:mybatis/*.xml
mybatis.configuration.mapUnderscoreToCamelCase = true
mybatis.configuration.cacheEnabled = true

# Hystrix 隔离策略配置
# 隔离策略是否开启超时，默认是true，开启。
hystrix.command.default.execution.timeout.enabled=true
# 隔离策略的超时时间，默认值是1000。
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=60000
# 发生超时是是否中断线程，默认是true。
#hystrix.command.default.execution.isolation.thread.interruptOnTimeout=false
# 取消时是否中断线程，默认是false。
hystrix.command.default.execution.isolation.thread.interruptOnCancel=false

# ribbon 负载均衡配置
#ribbon.eureka.enabled=false
# Max number of next servers to retry (excluding the first server)
ribbon.MaxAutoRetries=1
# Whether all operations can be retried for this client
ribbon.MaxAutoRetriesNextServer=1
# Interval to refresh the server list from the source
ribbon.OkToRetryOnAllOperations=true
# Interval to refresh the server list from the source
ribbon.ServerListRefreshInterval=2000
# Connect timeout used by Apache HttpClient
ribbon.ConnectTimeout=60000
# Read timeout used by Apache HttpClient
ribbon.ReadTimeout=60000

# 每个服务的http客户端连接池最大连接，默认是200。
zuul.host.maxTotalConnections=1000
# 每个route可用的最大连接数，默认值是20。
zuul.host.maxPerRouteConnections=100
# socket超时时间
zuul.host.socket-timeout-millis=60000
# 连接超时时间
zuul.host.connect-timeout-millis=60000
# 亚毫秒级的，指任意时间点允许的并发数。当请求达到或超过该设置值后，其其余就会被拒绝。默认值是100。
zuul.semaphore.max-semaphores=128
# 路由失败后是否重试
#zuul.retryable=true
# 建议使用这种方式来设置，可以给每个不同的后端微服务设置不同的信号量
#zuul.eureka.[service id].semaphore.maxSemaphores=128

# 服务发现配置
server.port=8021
spring.application.name=dtip-api
eureka.client.serviceUrl.defaultZone=http://localhost:9001/eureka/,http://localhost:9002/eureka/
management.security.enabled=false

# REDIS (RedisProperties)
spring.redis.database=10
spring.redis.pool.max-active=20
spring.redis.pool.max-wait=-1
spring.redis.pool.max-idle=8
spring.redis.pool.min-idle=3
spring.redis.timeout=600000


#反响代理配置
#这里的配置类似nginx的反响代理
#当请求/api/**会直接交给listOfServers配置的服务器处理
#当stripPrefix=true的时候 （http://127.0.0.1:8181/api/user/list -> http://192.168.1.100:8080/user/list）
#当stripPrefix=false的时候（http://127.0.0.1:8181/api/user/list -> http://192.168.1.100:8080/api/user/list）
#zuul.routes.api.path=/api/**
#zuul.routes.api.stripPrefix=false
#api.ribbon.listOfServers=192.168.1.100:8080,192.168.1.101:8080,192.168.1.102:8080



# The Base Application Configuration File

logging.level.root=DEBUG, stdout
logging.level.com.*.mapper=DEBUG

#spring.datasource.url=jdbc:mysql://localhost:3306/dtip_auth?useUnicode=true&characterEncoding=utf-8&useSSL=false&autoReconnect=true
#spring.datasource.username=root
#spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

spring.aop.proxy-target-class=true

logging.config=classpath:logback-spring-test.xml

# 随机端口
server.port=8081
# 服务发现配置
spring.application.name=hello
eureka.client.serviceUrl.defaultZone=http://localhost:9001/eureka/,http://localhost:9002/eureka/


###sentinel####
spring.redis.database=10
spring.redis.sentinel.master=mymaster
spring.redis.sentinel.nodes=ip1:26379,ip2:26379,ip3:26379
spring.redis.password=xxxxx

# routes 路由映射配置
zuul.ignored-services="*"


